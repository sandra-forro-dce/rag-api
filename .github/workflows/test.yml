name: RAG API Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install ruff
      run: pip install ruff

    - name: Run ruff linting
      run: ruff check rag/rag.py --fix

    - name: Create .env file from GitHub secrets
      run: |
        echo "GCP_PROJECT=${{ secrets.GCP_PROJECT }}" >> .env
        echo "GOOGLE_APPLICATION_CREDENTIALS=/secrets/deployment.json" >> .env
        echo "RAG_ENV=${{ secrets.RAG_ENV }}" >> .env

    - name: Write GCP credentials file
      run: |
        mkdir -p secrets
        echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" | base64 -d > secrets/deployment.json
        
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build and start containers
      run: docker-compose -f docker-compose.test.yml up -d --build

    - name: Wait for chromadb health check
      run: |
        echo "Waiting for ChromaDB healthcheck..."
        sleep 20

    - name: Show container logs if container crashes early
      run: docker logs rag-test || true

    - name: List containers (check if rag-test is running)
      run: docker ps -a

    - name: Show logs from rag-test container
      run: docker logs rag-test || true


    - name: Run all tests
      run: |
        docker exec rag-test pipenv run pytest tests/ -v

    - name: Tear down containers
      if: always()
      run: docker-compose -f docker-compose.test.yml down
